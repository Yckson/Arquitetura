$date
	Sat Mar 15 01:31:38 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module LCD_test $end
$var wire 1 ! LCD_RW $end
$var wire 1 " LCD_RS $end
$var wire 1 # LCD_ON $end
$var wire 8 $ LCD_DATA [7:0] $end
$var wire 1 % LCD_BLON $end
$var wire 1 & LCDAvailable $end
$var reg 1 ' clk $end
$var reg 32 ( data [31:0] $end
$var reg 1 ) enableWriting $end
$var reg 1 * rst $end
$var reg 1 + selectCD $end
$scope module lcd $end
$var wire 1 & LCD_Available $end
$var wire 1 % LCD_BLON $end
$var wire 8 , LCD_DATA [7:0] $end
$var wire 1 # LCD_ON $end
$var wire 1 " LCD_RS $end
$var wire 1 ! LCD_RW $end
$var wire 1 ' clk $end
$var wire 32 - data [31:0] $end
$var wire 1 ) enableWriting $end
$var wire 1 * rst $end
$var wire 1 + selectCD $end
$var parameter 4 . PULSE_HIGH $end
$var parameter 4 / byte0 $end
$var parameter 4 0 byte1 $end
$var parameter 4 1 byte2 $end
$var parameter 4 2 byte3 $end
$var parameter 4 3 initState1 $end
$var parameter 4 4 initState2 $end
$var parameter 4 5 initStateCommand $end
$var parameter 4 6 resetState $end
$var parameter 4 7 waitingState $end
$var reg 1 8 LCDAvailable $end
$var reg 1 9 actualLine $end
$var reg 1 : backlightON $end
$var reg 8 ; currCmd [7:0] $end
$var reg 4 < currState [3:0] $end
$var reg 8 = delayClocks [7:0] $end
$var reg 1 > enableNext $end
$var reg 32 ? localData [31:0] $end
$var reg 4 @ nextState [3:0] $end
$var reg 1 A powerON $end
$var reg 1 B select_CommandOrData $end
$var reg 1 C select_ReadOrWrite $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 7
b1111 6
b1 5
b10 4
b0 3
b111 2
b110 1
b101 0
b100 /
b1110 .
$end
#0
$dumpvars
xC
xB
xA
bx @
bx ?
0>
bx =
b1111 <
bx ;
x:
x9
x8
b0 -
bx ,
1+
1*
0)
b0 (
0'
x&
x%
bx $
x#
x"
x!
$end
#10
0*
#15
b0 @
b1110 <
0&
08
b111000 $
b111000 ,
b111000 ;
1%
1:
b0 =
1#
1A
0"
0B
0!
0C
1'
#20
0'
#25
b0 <
1>
1'
#30
0'
#35
b1000 @
b1110 <
b0 ?
b1100 $
b1100 ,
b1100 ;
0>
1'
#40
0'
#45
b1000 <
1>
1'
#50
0'
#55
1&
18
b0 $
b0 ,
b0 ;
0>
1'
#60
0'
#65
b10 <
1'
1)
b1001000010001010100110001001100 (
b1001000010001010100110001001100 -
#70
0'
#75
0&
08
b100 @
b1110 <
b1001000010001010100110001001100 ?
1'
0)
#80
0'
#85
b100 <
1>
1'
1)
b1001111001000000101011101001001 (
b1001111001000000101011101001001 -
#90
0'
#95
b101 @
b1110 <
b1001000 $
b1001000 ,
b1001000 ;
1"
1B
0>
1'
0)
#100
0'
#105
b101 <
1>
1'
#110
0'
#115
b110 @
b1110 <
b1000101 $
b1000101 ,
b1000101 ;
0>
1'
#120
0'
#125
b110 <
1>
1'
#130
0'
#135
b111 @
b1110 <
b1001100 $
b1001100 ,
b1001100 ;
0>
1'
#140
0'
#145
b111 <
1>
1'
#150
0'
#155
b1000 @
b1110 <
0>
1'
#160
0'
#165
b1000 <
1>
1'
#170
0'
#175
1&
18
0"
0B
b0 $
b0 ,
b0 ;
0>
1'
#180
0'
#185
b10 <
1'
1)
b10011000100110000100001 (
b10011000100110000100001 -
#190
0'
#195
0&
08
b100 @
b1110 <
b10011000100110000100001 ?
1'
0)
#200
0'
#205
b100 <
1>
1'
#210
0'
#215
b101 @
b1110 <
1"
1B
0>
1'
#220
0'
#225
b101 <
1>
1'
#230
0'
#235
b110 @
b1110 <
b1001100 $
b1001100 ,
b1001100 ;
0>
1'
#240
0'
#245
b110 <
1>
1'
#250
0'
#255
b111 @
b1110 <
0>
1'
#260
0'
#265
b111 <
1>
1'
#270
0'
#275
b1000 @
b1110 <
b100001 $
b100001 ,
b100001 ;
0>
1'
#280
0'
#285
b1000 <
1>
1'
#290
0'
#295
1&
18
0"
0B
b0 $
b0 ,
b0 ;
0>
1'
#300
0'
#305
1'
#310
0'
#315
1'
#320
0'
#325
1'
#330
0'
#335
1'
#340
0'
#345
1'
#350
0'
#355
1'
#360
0'
#365
1'
#370
0'
#375
1'
#380
0'
#385
1'
#390
0'
#395
1'
#400
0'
#405
1'
#410
0'
#415
1'
#420
0'
#425
1'
#430
0'
#435
1'
#440
0'
#445
1'
#450
0'
#455
1'
#460
0'
#465
1'
#470
0'
#475
1'
#480
0'
#485
1'
#490
0'
#495
1'
#500
0'
#505
1'
#510
0'
#515
1'
#520
0'
#525
1'
#530
0'
#535
1'
#540
0'
#545
1'
#550
0'
#555
1'
#560
0'
#565
1'
#570
0'
#575
1'
#580
0'
#585
1'
#590
0'
#595
1'
#600
0'
#605
1'
#610
0'
#615
1'
#620
0'
#625
1'
#630
0'
#635
1'
#640
0'
#645
1'
#650
0'
#655
1'
#660
0'
#665
1'
#670
0'
#675
1'
#680
0'
#685
1'
#690
0'
#695
1'
